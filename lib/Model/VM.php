<?php
/**
 * VM
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cudo Compute service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * VM Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class VM implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'VM';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'active_state' => 'string',
        'boot_disk' => '\Swagger\Client\Model\Disk',
        'boot_disk_size_gib' => 'int',
        'cpu_model' => 'string',
        'create_by' => 'string',
        'datacenter_id' => 'string',
        'external_ip_address' => 'string',
        'gpu_model' => 'string',
        'gpu_quantity' => 'int',
        'id' => 'string',
        'image_id' => 'string',
        'image_name' => 'string',
        'init_state' => 'string',
        'internal_ip_address' => 'string',
        'lcm_state' => 'string',
        'machine_type' => 'string',
        'memory' => 'int',
        'metadata' => 'map[string,string]',
        'nics' => '\Swagger\Client\Model\VMNIC[]',
        'one_state' => 'string',
        'price_hr' => 'float',
        'private_image_id' => 'string',
        'public_image_id' => 'string',
        'public_image_name' => 'string',
        'public_ip_address' => 'string',
        'region_id' => 'string',
        'region_name' => 'string',
        'renewable_energy' => 'bool',
        'rules' => '\Swagger\Client\Model\SecurityGroupRule[]',
        'security_group_ids' => 'string[]',
        'short_state' => 'string',
        'storage_disks' => '\Swagger\Client\Model\Disk[]',
        'vcpus' => 'int',
        'vm_state' => '\Swagger\Client\Model\VmState'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'active_state' => null,
        'boot_disk' => null,
        'boot_disk_size_gib' => 'int64',
        'cpu_model' => null,
        'create_by' => null,
        'datacenter_id' => null,
        'external_ip_address' => null,
        'gpu_model' => null,
        'gpu_quantity' => 'int64',
        'id' => null,
        'image_id' => null,
        'image_name' => null,
        'init_state' => null,
        'internal_ip_address' => null,
        'lcm_state' => null,
        'machine_type' => null,
        'memory' => 'int64',
        'metadata' => null,
        'nics' => null,
        'one_state' => null,
        'price_hr' => 'float',
        'private_image_id' => null,
        'public_image_id' => null,
        'public_image_name' => null,
        'public_ip_address' => null,
        'region_id' => null,
        'region_name' => null,
        'renewable_energy' => null,
        'rules' => null,
        'security_group_ids' => null,
        'short_state' => null,
        'storage_disks' => null,
        'vcpus' => 'int64',
        'vm_state' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'active_state' => 'activeState',
        'boot_disk' => 'bootDisk',
        'boot_disk_size_gib' => 'bootDiskSizeGib',
        'cpu_model' => 'cpuModel',
        'create_by' => 'createBy',
        'datacenter_id' => 'datacenterId',
        'external_ip_address' => 'externalIpAddress',
        'gpu_model' => 'gpuModel',
        'gpu_quantity' => 'gpuQuantity',
        'id' => 'id',
        'image_id' => 'imageId',
        'image_name' => 'imageName',
        'init_state' => 'initState',
        'internal_ip_address' => 'internalIpAddress',
        'lcm_state' => 'lcmState',
        'machine_type' => 'machineType',
        'memory' => 'memory',
        'metadata' => 'metadata',
        'nics' => 'nics',
        'one_state' => 'oneState',
        'price_hr' => 'priceHr',
        'private_image_id' => 'privateImageId',
        'public_image_id' => 'publicImageId',
        'public_image_name' => 'publicImageName',
        'public_ip_address' => 'publicIpAddress',
        'region_id' => 'regionId',
        'region_name' => 'regionName',
        'renewable_energy' => 'renewableEnergy',
        'rules' => 'rules',
        'security_group_ids' => 'securityGroupIds',
        'short_state' => 'shortState',
        'storage_disks' => 'storageDisks',
        'vcpus' => 'vcpus',
        'vm_state' => 'vmState'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'active_state' => 'setActiveState',
        'boot_disk' => 'setBootDisk',
        'boot_disk_size_gib' => 'setBootDiskSizeGib',
        'cpu_model' => 'setCpuModel',
        'create_by' => 'setCreateBy',
        'datacenter_id' => 'setDatacenterId',
        'external_ip_address' => 'setExternalIpAddress',
        'gpu_model' => 'setGpuModel',
        'gpu_quantity' => 'setGpuQuantity',
        'id' => 'setId',
        'image_id' => 'setImageId',
        'image_name' => 'setImageName',
        'init_state' => 'setInitState',
        'internal_ip_address' => 'setInternalIpAddress',
        'lcm_state' => 'setLcmState',
        'machine_type' => 'setMachineType',
        'memory' => 'setMemory',
        'metadata' => 'setMetadata',
        'nics' => 'setNics',
        'one_state' => 'setOneState',
        'price_hr' => 'setPriceHr',
        'private_image_id' => 'setPrivateImageId',
        'public_image_id' => 'setPublicImageId',
        'public_image_name' => 'setPublicImageName',
        'public_ip_address' => 'setPublicIpAddress',
        'region_id' => 'setRegionId',
        'region_name' => 'setRegionName',
        'renewable_energy' => 'setRenewableEnergy',
        'rules' => 'setRules',
        'security_group_ids' => 'setSecurityGroupIds',
        'short_state' => 'setShortState',
        'storage_disks' => 'setStorageDisks',
        'vcpus' => 'setVcpus',
        'vm_state' => 'setVmState'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'active_state' => 'getActiveState',
        'boot_disk' => 'getBootDisk',
        'boot_disk_size_gib' => 'getBootDiskSizeGib',
        'cpu_model' => 'getCpuModel',
        'create_by' => 'getCreateBy',
        'datacenter_id' => 'getDatacenterId',
        'external_ip_address' => 'getExternalIpAddress',
        'gpu_model' => 'getGpuModel',
        'gpu_quantity' => 'getGpuQuantity',
        'id' => 'getId',
        'image_id' => 'getImageId',
        'image_name' => 'getImageName',
        'init_state' => 'getInitState',
        'internal_ip_address' => 'getInternalIpAddress',
        'lcm_state' => 'getLcmState',
        'machine_type' => 'getMachineType',
        'memory' => 'getMemory',
        'metadata' => 'getMetadata',
        'nics' => 'getNics',
        'one_state' => 'getOneState',
        'price_hr' => 'getPriceHr',
        'private_image_id' => 'getPrivateImageId',
        'public_image_id' => 'getPublicImageId',
        'public_image_name' => 'getPublicImageName',
        'public_ip_address' => 'getPublicIpAddress',
        'region_id' => 'getRegionId',
        'region_name' => 'getRegionName',
        'renewable_energy' => 'getRenewableEnergy',
        'rules' => 'getRules',
        'security_group_ids' => 'getSecurityGroupIds',
        'short_state' => 'getShortState',
        'storage_disks' => 'getStorageDisks',
        'vcpus' => 'getVcpus',
        'vm_state' => 'getVmState'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['active_state'] = isset($data['active_state']) ? $data['active_state'] : null;
        $this->container['boot_disk'] = isset($data['boot_disk']) ? $data['boot_disk'] : null;
        $this->container['boot_disk_size_gib'] = isset($data['boot_disk_size_gib']) ? $data['boot_disk_size_gib'] : null;
        $this->container['cpu_model'] = isset($data['cpu_model']) ? $data['cpu_model'] : null;
        $this->container['create_by'] = isset($data['create_by']) ? $data['create_by'] : null;
        $this->container['datacenter_id'] = isset($data['datacenter_id']) ? $data['datacenter_id'] : null;
        $this->container['external_ip_address'] = isset($data['external_ip_address']) ? $data['external_ip_address'] : null;
        $this->container['gpu_model'] = isset($data['gpu_model']) ? $data['gpu_model'] : null;
        $this->container['gpu_quantity'] = isset($data['gpu_quantity']) ? $data['gpu_quantity'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['image_id'] = isset($data['image_id']) ? $data['image_id'] : null;
        $this->container['image_name'] = isset($data['image_name']) ? $data['image_name'] : null;
        $this->container['init_state'] = isset($data['init_state']) ? $data['init_state'] : null;
        $this->container['internal_ip_address'] = isset($data['internal_ip_address']) ? $data['internal_ip_address'] : null;
        $this->container['lcm_state'] = isset($data['lcm_state']) ? $data['lcm_state'] : null;
        $this->container['machine_type'] = isset($data['machine_type']) ? $data['machine_type'] : null;
        $this->container['memory'] = isset($data['memory']) ? $data['memory'] : null;
        $this->container['metadata'] = isset($data['metadata']) ? $data['metadata'] : null;
        $this->container['nics'] = isset($data['nics']) ? $data['nics'] : null;
        $this->container['one_state'] = isset($data['one_state']) ? $data['one_state'] : null;
        $this->container['price_hr'] = isset($data['price_hr']) ? $data['price_hr'] : null;
        $this->container['private_image_id'] = isset($data['private_image_id']) ? $data['private_image_id'] : null;
        $this->container['public_image_id'] = isset($data['public_image_id']) ? $data['public_image_id'] : null;
        $this->container['public_image_name'] = isset($data['public_image_name']) ? $data['public_image_name'] : null;
        $this->container['public_ip_address'] = isset($data['public_ip_address']) ? $data['public_ip_address'] : null;
        $this->container['region_id'] = isset($data['region_id']) ? $data['region_id'] : null;
        $this->container['region_name'] = isset($data['region_name']) ? $data['region_name'] : null;
        $this->container['renewable_energy'] = isset($data['renewable_energy']) ? $data['renewable_energy'] : null;
        $this->container['rules'] = isset($data['rules']) ? $data['rules'] : null;
        $this->container['security_group_ids'] = isset($data['security_group_ids']) ? $data['security_group_ids'] : null;
        $this->container['short_state'] = isset($data['short_state']) ? $data['short_state'] : null;
        $this->container['storage_disks'] = isset($data['storage_disks']) ? $data['storage_disks'] : null;
        $this->container['vcpus'] = isset($data['vcpus']) ? $data['vcpus'] : null;
        $this->container['vm_state'] = isset($data['vm_state']) ? $data['vm_state'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets active_state
     *
     * @return string
     */
    public function getActiveState()
    {
        return $this->container['active_state'];
    }

    /**
     * Sets active_state
     *
     * @param string $active_state active_state
     *
     * @return $this
     */
    public function setActiveState($active_state)
    {
        $this->container['active_state'] = $active_state;

        return $this;
    }

    /**
     * Gets boot_disk
     *
     * @return \Swagger\Client\Model\Disk
     */
    public function getBootDisk()
    {
        return $this->container['boot_disk'];
    }

    /**
     * Sets boot_disk
     *
     * @param \Swagger\Client\Model\Disk $boot_disk boot_disk
     *
     * @return $this
     */
    public function setBootDisk($boot_disk)
    {
        $this->container['boot_disk'] = $boot_disk;

        return $this;
    }

    /**
     * Gets boot_disk_size_gib
     *
     * @return int
     */
    public function getBootDiskSizeGib()
    {
        return $this->container['boot_disk_size_gib'];
    }

    /**
     * Sets boot_disk_size_gib
     *
     * @param int $boot_disk_size_gib boot_disk_size_gib
     *
     * @return $this
     */
    public function setBootDiskSizeGib($boot_disk_size_gib)
    {
        $this->container['boot_disk_size_gib'] = $boot_disk_size_gib;

        return $this;
    }

    /**
     * Gets cpu_model
     *
     * @return string
     */
    public function getCpuModel()
    {
        return $this->container['cpu_model'];
    }

    /**
     * Sets cpu_model
     *
     * @param string $cpu_model cpu_model
     *
     * @return $this
     */
    public function setCpuModel($cpu_model)
    {
        $this->container['cpu_model'] = $cpu_model;

        return $this;
    }

    /**
     * Gets create_by
     *
     * @return string
     */
    public function getCreateBy()
    {
        return $this->container['create_by'];
    }

    /**
     * Sets create_by
     *
     * @param string $create_by create_by
     *
     * @return $this
     */
    public function setCreateBy($create_by)
    {
        $this->container['create_by'] = $create_by;

        return $this;
    }

    /**
     * Gets datacenter_id
     *
     * @return string
     */
    public function getDatacenterId()
    {
        return $this->container['datacenter_id'];
    }

    /**
     * Sets datacenter_id
     *
     * @param string $datacenter_id datacenter_id
     *
     * @return $this
     */
    public function setDatacenterId($datacenter_id)
    {
        $this->container['datacenter_id'] = $datacenter_id;

        return $this;
    }

    /**
     * Gets external_ip_address
     *
     * @return string
     */
    public function getExternalIpAddress()
    {
        return $this->container['external_ip_address'];
    }

    /**
     * Sets external_ip_address
     *
     * @param string $external_ip_address external_ip_address
     *
     * @return $this
     */
    public function setExternalIpAddress($external_ip_address)
    {
        $this->container['external_ip_address'] = $external_ip_address;

        return $this;
    }

    /**
     * Gets gpu_model
     *
     * @return string
     */
    public function getGpuModel()
    {
        return $this->container['gpu_model'];
    }

    /**
     * Sets gpu_model
     *
     * @param string $gpu_model gpu_model
     *
     * @return $this
     */
    public function setGpuModel($gpu_model)
    {
        $this->container['gpu_model'] = $gpu_model;

        return $this;
    }

    /**
     * Gets gpu_quantity
     *
     * @return int
     */
    public function getGpuQuantity()
    {
        return $this->container['gpu_quantity'];
    }

    /**
     * Sets gpu_quantity
     *
     * @param int $gpu_quantity gpu_quantity
     *
     * @return $this
     */
    public function setGpuQuantity($gpu_quantity)
    {
        $this->container['gpu_quantity'] = $gpu_quantity;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets image_id
     *
     * @return string
     */
    public function getImageId()
    {
        return $this->container['image_id'];
    }

    /**
     * Sets image_id
     *
     * @param string $image_id image_id
     *
     * @return $this
     */
    public function setImageId($image_id)
    {
        $this->container['image_id'] = $image_id;

        return $this;
    }

    /**
     * Gets image_name
     *
     * @return string
     */
    public function getImageName()
    {
        return $this->container['image_name'];
    }

    /**
     * Sets image_name
     *
     * @param string $image_name image_name
     *
     * @return $this
     */
    public function setImageName($image_name)
    {
        $this->container['image_name'] = $image_name;

        return $this;
    }

    /**
     * Gets init_state
     *
     * @return string
     */
    public function getInitState()
    {
        return $this->container['init_state'];
    }

    /**
     * Sets init_state
     *
     * @param string $init_state init_state
     *
     * @return $this
     */
    public function setInitState($init_state)
    {
        $this->container['init_state'] = $init_state;

        return $this;
    }

    /**
     * Gets internal_ip_address
     *
     * @return string
     */
    public function getInternalIpAddress()
    {
        return $this->container['internal_ip_address'];
    }

    /**
     * Sets internal_ip_address
     *
     * @param string $internal_ip_address internal_ip_address
     *
     * @return $this
     */
    public function setInternalIpAddress($internal_ip_address)
    {
        $this->container['internal_ip_address'] = $internal_ip_address;

        return $this;
    }

    /**
     * Gets lcm_state
     *
     * @return string
     */
    public function getLcmState()
    {
        return $this->container['lcm_state'];
    }

    /**
     * Sets lcm_state
     *
     * @param string $lcm_state lcm_state
     *
     * @return $this
     */
    public function setLcmState($lcm_state)
    {
        $this->container['lcm_state'] = $lcm_state;

        return $this;
    }

    /**
     * Gets machine_type
     *
     * @return string
     */
    public function getMachineType()
    {
        return $this->container['machine_type'];
    }

    /**
     * Sets machine_type
     *
     * @param string $machine_type machine_type
     *
     * @return $this
     */
    public function setMachineType($machine_type)
    {
        $this->container['machine_type'] = $machine_type;

        return $this;
    }

    /**
     * Gets memory
     *
     * @return int
     */
    public function getMemory()
    {
        return $this->container['memory'];
    }

    /**
     * Sets memory
     *
     * @param int $memory memory
     *
     * @return $this
     */
    public function setMemory($memory)
    {
        $this->container['memory'] = $memory;

        return $this;
    }

    /**
     * Gets metadata
     *
     * @return map[string,string]
     */
    public function getMetadata()
    {
        return $this->container['metadata'];
    }

    /**
     * Sets metadata
     *
     * @param map[string,string] $metadata metadata
     *
     * @return $this
     */
    public function setMetadata($metadata)
    {
        $this->container['metadata'] = $metadata;

        return $this;
    }

    /**
     * Gets nics
     *
     * @return \Swagger\Client\Model\VMNIC[]
     */
    public function getNics()
    {
        return $this->container['nics'];
    }

    /**
     * Sets nics
     *
     * @param \Swagger\Client\Model\VMNIC[] $nics nics
     *
     * @return $this
     */
    public function setNics($nics)
    {
        $this->container['nics'] = $nics;

        return $this;
    }

    /**
     * Gets one_state
     *
     * @return string
     */
    public function getOneState()
    {
        return $this->container['one_state'];
    }

    /**
     * Sets one_state
     *
     * @param string $one_state one_state
     *
     * @return $this
     */
    public function setOneState($one_state)
    {
        $this->container['one_state'] = $one_state;

        return $this;
    }

    /**
     * Gets price_hr
     *
     * @return float
     */
    public function getPriceHr()
    {
        return $this->container['price_hr'];
    }

    /**
     * Sets price_hr
     *
     * @param float $price_hr price_hr
     *
     * @return $this
     */
    public function setPriceHr($price_hr)
    {
        $this->container['price_hr'] = $price_hr;

        return $this;
    }

    /**
     * Gets private_image_id
     *
     * @return string
     */
    public function getPrivateImageId()
    {
        return $this->container['private_image_id'];
    }

    /**
     * Sets private_image_id
     *
     * @param string $private_image_id private_image_id
     *
     * @return $this
     */
    public function setPrivateImageId($private_image_id)
    {
        $this->container['private_image_id'] = $private_image_id;

        return $this;
    }

    /**
     * Gets public_image_id
     *
     * @return string
     */
    public function getPublicImageId()
    {
        return $this->container['public_image_id'];
    }

    /**
     * Sets public_image_id
     *
     * @param string $public_image_id public_image_id
     *
     * @return $this
     */
    public function setPublicImageId($public_image_id)
    {
        $this->container['public_image_id'] = $public_image_id;

        return $this;
    }

    /**
     * Gets public_image_name
     *
     * @return string
     */
    public function getPublicImageName()
    {
        return $this->container['public_image_name'];
    }

    /**
     * Sets public_image_name
     *
     * @param string $public_image_name public_image_name
     *
     * @return $this
     */
    public function setPublicImageName($public_image_name)
    {
        $this->container['public_image_name'] = $public_image_name;

        return $this;
    }

    /**
     * Gets public_ip_address
     *
     * @return string
     */
    public function getPublicIpAddress()
    {
        return $this->container['public_ip_address'];
    }

    /**
     * Sets public_ip_address
     *
     * @param string $public_ip_address public_ip_address
     *
     * @return $this
     */
    public function setPublicIpAddress($public_ip_address)
    {
        $this->container['public_ip_address'] = $public_ip_address;

        return $this;
    }

    /**
     * Gets region_id
     *
     * @return string
     */
    public function getRegionId()
    {
        return $this->container['region_id'];
    }

    /**
     * Sets region_id
     *
     * @param string $region_id region_id
     *
     * @return $this
     */
    public function setRegionId($region_id)
    {
        $this->container['region_id'] = $region_id;

        return $this;
    }

    /**
     * Gets region_name
     *
     * @return string
     */
    public function getRegionName()
    {
        return $this->container['region_name'];
    }

    /**
     * Sets region_name
     *
     * @param string $region_name region_name
     *
     * @return $this
     */
    public function setRegionName($region_name)
    {
        $this->container['region_name'] = $region_name;

        return $this;
    }

    /**
     * Gets renewable_energy
     *
     * @return bool
     */
    public function getRenewableEnergy()
    {
        return $this->container['renewable_energy'];
    }

    /**
     * Sets renewable_energy
     *
     * @param bool $renewable_energy renewable_energy
     *
     * @return $this
     */
    public function setRenewableEnergy($renewable_energy)
    {
        $this->container['renewable_energy'] = $renewable_energy;

        return $this;
    }

    /**
     * Gets rules
     *
     * @return \Swagger\Client\Model\SecurityGroupRule[]
     */
    public function getRules()
    {
        return $this->container['rules'];
    }

    /**
     * Sets rules
     *
     * @param \Swagger\Client\Model\SecurityGroupRule[] $rules rules
     *
     * @return $this
     */
    public function setRules($rules)
    {
        $this->container['rules'] = $rules;

        return $this;
    }

    /**
     * Gets security_group_ids
     *
     * @return string[]
     */
    public function getSecurityGroupIds()
    {
        return $this->container['security_group_ids'];
    }

    /**
     * Sets security_group_ids
     *
     * @param string[] $security_group_ids security_group_ids
     *
     * @return $this
     */
    public function setSecurityGroupIds($security_group_ids)
    {
        $this->container['security_group_ids'] = $security_group_ids;

        return $this;
    }

    /**
     * Gets short_state
     *
     * @return string
     */
    public function getShortState()
    {
        return $this->container['short_state'];
    }

    /**
     * Sets short_state
     *
     * @param string $short_state short_state
     *
     * @return $this
     */
    public function setShortState($short_state)
    {
        $this->container['short_state'] = $short_state;

        return $this;
    }

    /**
     * Gets storage_disks
     *
     * @return \Swagger\Client\Model\Disk[]
     */
    public function getStorageDisks()
    {
        return $this->container['storage_disks'];
    }

    /**
     * Sets storage_disks
     *
     * @param \Swagger\Client\Model\Disk[] $storage_disks storage_disks
     *
     * @return $this
     */
    public function setStorageDisks($storage_disks)
    {
        $this->container['storage_disks'] = $storage_disks;

        return $this;
    }

    /**
     * Gets vcpus
     *
     * @return int
     */
    public function getVcpus()
    {
        return $this->container['vcpus'];
    }

    /**
     * Sets vcpus
     *
     * @param int $vcpus vcpus
     *
     * @return $this
     */
    public function setVcpus($vcpus)
    {
        $this->container['vcpus'] = $vcpus;

        return $this;
    }

    /**
     * Gets vm_state
     *
     * @return \Swagger\Client\Model\VmState
     */
    public function getVmState()
    {
        return $this->container['vm_state'];
    }

    /**
     * Sets vm_state
     *
     * @param \Swagger\Client\Model\VmState $vm_state vm_state
     *
     * @return $this
     */
    public function setVmState($vm_state)
    {
        $this->container['vm_state'] = $vm_state;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
